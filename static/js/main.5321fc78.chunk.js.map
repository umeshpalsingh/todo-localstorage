{"version":3,"sources":["Components/Todos.js","Components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","markComplete","ListGroup","className","map","todo","ListGroupItem","todoString","onClick","id","TodoForm","addTodos","useState","setTodoString","Form","onSubmit","e","preventDefault","alert","v4","FormGroup","InputGroup","Input","type","name","placeholder","value","onChange","target","InputGroupAddon","Button","color","App","setTodos","useEffect","localTodos","localStorage","getItem","JSON","parse","setItem","stringify","Container","fluid","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAiBeA,EAbD,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aACnB,OACI,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAArB,SACKH,EAAMI,KAAI,SAAAC,GAAI,OACX,eAACC,EAAA,EAAD,WACKD,EAAKE,WACN,sBAAMJ,UAAU,sBAAsBK,QAAS,kBAAMP,EAAaI,EAAKI,KAAvE,SAA4E,cAAC,IAAD,QAF5DJ,EAAKI,U,wDC8C1BC,EA1CE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEf,EAAoCC,mBAAS,IAA7C,mBAAOL,EAAP,KAAmBM,EAAnB,KAmBA,OACI,cAACC,EAAA,EAAD,CAAMC,SAlBW,SAACC,GAGlB,GAFAA,EAAEC,iBAEgB,KAAfV,EACC,OAAOW,MAAM,wBAGjB,IAAMb,EAAO,CACTE,aACAE,GAAIU,eAGRR,EAASN,GACTQ,EAAc,KAKd,SACI,cAACO,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,OACLf,GAAG,OACHgB,YAAY,aACZC,MAAOnB,EACPoB,SAAU,SAAAX,GAAC,OAAIH,EAAcG,EAAEY,OAAOF,UAE1C,cAACG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAQC,MAAM,OAAd,2BCPTC,MAhCf,WAEE,MAA0BpB,mBAAS,IAAnC,mBAAOZ,EAAP,KAAciC,EAAd,KAqBA,OAnBAC,qBAAU,WACR,IAAMC,EAAaC,aAAaC,QAAQ,SACrCF,GACDF,EAASK,KAAKC,MAAMJ,MAEtB,IAMFD,qBAAU,WACRE,aAAaI,QAAQ,QAASF,KAAKG,UAAUzC,MAC7C,CAACA,IAOD,eAAC0C,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,4DACA,cAAC,EAAD,CAAO3C,MAAOA,EAAOC,aAPJ,SAAAQ,GACnBwB,EAASjC,EAAM4C,QAAO,SAAAvC,GAAI,OAAIA,EAAKI,KAAOA,SAOxC,cAAC,EAAD,CAAUE,SAhBG,SAACN,GAChB4B,EAAS,GAAD,mBAAKjC,GAAL,CAAYK,YCPTwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5321fc78.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport {FaCheckDouble} from \"react-icons/fa\";\r\n\r\nconst Todos = ({todos, markComplete}) => {\r\n    return (\r\n        <ListGroup className=\"mt-5 mb-2 items\">\r\n            {todos.map(todo => (\r\n                <ListGroupItem key={todo.id}>\r\n                    {todo.todoString}\r\n                    <span className=\"float-end check-out\" onClick={() => markComplete(todo.id)}><FaCheckDouble /></span>\r\n                </ListGroupItem>\r\n            ))}\r\n        </ListGroup>\r\n    );\r\n}\r\n\r\nexport default Todos;","import React,{useState} from \"react\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    Button\r\n} from \"reactstrap\";\r\n\r\nimport { v4 } from \"uuid\";\r\n\r\nconst TodoForm = ({addTodos}) => {\r\n\r\n    const [todoString, setTodoString] = useState(\"\");\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(todoString === \"\") {\r\n            return alert(\"Please add something\");\r\n        }\r\n\r\n        const todo = {\r\n            todoString,\r\n            id: v4()\r\n        }\r\n\r\n        addTodos(todo);\r\n        setTodoString(\"\");\r\n    }\r\n\r\n\r\n    return(\r\n        <Form onSubmit={handleSubmit}>\r\n            <FormGroup>\r\n                <InputGroup>\r\n                    <Input \r\n                        type=\"text\"\r\n                        name=\"todo\"\r\n                        id=\"todo\"\r\n                        placeholder=\"Add a task\"\r\n                        value={todoString}\r\n                        onChange={e => setTodoString(e.target.value)}\r\n                    />\r\n                    <InputGroupAddon>\r\n                        <Button color=\"info\">Add</Button>\r\n                    </InputGroupAddon>\r\n                </InputGroup>\r\n            </FormGroup>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React, {useState, useEffect} from \"react\";\nimport { Container } from \"reactstrap\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport Todos from \"./Components/Todos\";\nimport TodoForm from \"./Components/TodoForm\";\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const localTodos = localStorage.getItem(\"todos\");\n    if(localTodos) {\n      setTodos(JSON.parse(localTodos));\n    }\n  },[]);\n\n  const addTodos = (todo) => {\n    setTodos([...todos, todo]);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  },[todos]);\n\n  const markComplete = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <Container fluid>\n      <h1>Todo App with localStorage</h1>\n      <Todos todos={todos} markComplete={markComplete} />\n      <TodoForm addTodos={addTodos} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}